{"version":3,"sources":["webpack:///./src/images/assets/ron5.jpg","webpack:///./src/templates/ProductPageTemplate.js"],"names":["module","exports","ProductPageTemplate","data","addProductToCart","useContext","StoreContext","product","shopifyProduct","edges","allShopifyCollection","className","variants","image","undefined","src","ron5","alt","fluid","localFile","childImageSharp","originalName","title","productType","weight","description","price","onClick","shopifyId","then","res","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","getRandomCategories","newestOnTop","rtl","pauseOnFocusLoss"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,oD,kCCA3C,sIA8FeC,UApFa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrBC,EAAqBC,qBAAWC,KAAhCF,iBAGUG,EAEdJ,EAFFK,eACwBC,EACtBN,EADFO,qBAAwBD,MAG1B,OACE,kBAAC,IAAD,KACE,yBAAKE,UAAU,aACb,yBAAKA,UAAU,kDACkB,OAA9BJ,EAAQK,SAAS,GAAGC,YACSC,IAA9BP,EAAQK,SAAS,GAAGC,MAClB,yBAAKE,IAAKC,IAAML,UAAU,OAAOM,IAAI,SAErC,kBAAC,IAAD,CACEC,MAAOX,EAAQK,SAAS,GAAGC,MAAMM,UAAUC,gBAAgBF,MAC3DD,IACEV,EAAQK,SAAS,GAAGC,MAAMM,UAAUC,gBAAgBF,MACjDG,aAELV,UAAU,SAId,yBAAKA,UAAU,SACb,uBAAGA,UAAU,gBAAgBJ,EAAQe,OACrC,uBAAGX,UAAU,8CACVJ,EAAQgB,YACT,6BAFF,WAGWhB,EAAQK,SAAS,GAAGY,OAH/B,MAIE,6BAJF,gBAKgBjB,EAAQkB,aAExB,uBAAGd,UAAU,+CAAb,IACIJ,EAAQK,SAAS,GAAGc,MAAO,IAC7B,0BAAMf,UAAU,6BAAhB,QAEF,yBAAKA,UAAU,sDACb,uBAAGA,UAAU,oBAAb,YACA,uBAAGA,UAAU,oBAAb,YAEF,4BACEA,UAAU,UACVgB,QAAS,WACPvB,EAAiBG,EAAQK,SAAS,GAAGgB,WAAWC,MAAK,SAACC,GACpDC,IAAMC,KAAK,gBAAiB,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUzB,SAXlB,qBAoBJ,kBAAC,IAAD,CACEQ,MAAM,yBACNb,MAAO+B,YAAoB/B,GAC3BE,UAAU,iCAGd,kBAAC,IAAD,CACEsB,SAAS,YACTC,UAAW,IACXC,iBAAe,EACfM,aAAa,EACbL,cAAY,EACZM,KAAK,EACLC,kBAAgB,EAChBL,WAAS,EACTD,cAAc","file":"component---src-templates-product-page-template-js-33cbe6d3862f8e823e03.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/ron5-79279e43eaeb43ad139a3d75d19cb75b.jpg\";","import React, { useContext } from 'react';\nimport Img from 'gatsby-image';\nimport { graphql } from 'gatsby';\nimport { StoreContext } from '../context/StoreContext';\nimport CategoriesSection from '../components/categories-section';\nimport Layout from '../components/layout';\nimport { getRandomCategories } from '../utils';\nimport ron5 from '../images/assets/ron5.jpg';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst ProductPageTemplate = ({ data }) => {\n  const { addProductToCart } = useContext(StoreContext);\n\n  const {\n    shopifyProduct: product,\n    allShopifyCollection: { edges },\n  } = data;\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <div className=\"flex items-center justify-around pt-6 md:pt-24\">\n          {product.variants[0].image === null ||\n          product.variants[0].image === undefined ? (\n            <img src={ron5} className=\"w-96\" alt=\"name\" />\n          ) : (\n            <Img\n              fluid={product.variants[0].image.localFile.childImageSharp.fluid}\n              alt={\n                product.variants[0].image.localFile.childImageSharp.fluid\n                  .originalName\n              }\n              className=\"w-96\"\n            />\n          )}\n\n          <div className=\"w-1/3\">\n            <p className=\"detail-title\">{product.title}</p>\n            <p className=\"font-gotham-book opacity-50 my-6 leading-9\">\n              {product.productType}\n              <br />\n              Tamaño: {product.variants[0].weight} oz\n              <br />\n              Descripción: {product.description}\n            </p>\n            <p className=\"font-gotham-medium text-2xl tracking-widest\">\n              ${product.variants[0].price}{' '}\n              <span className=\"text-base tracking-widest\">USD</span>\n            </p>\n            <div className=\"my-9 h-14 border-2 border-beige py-1 px-4 relative\">\n              <p className=\"small opacity-50\">Cantidad</p>\n              <p className=\"font-gotham-book\">1 pieza</p>\n            </div>\n            <button\n              className=\"btn-red\"\n              onClick={() => {\n                addProductToCart(product.variants[0].shopifyId).then((res) => {\n                  toast.dark('Item agregado', {\n                    position: 'top-right',\n                    autoClose: 5000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n                });\n              }}\n            >\n              Agregar a bolsa\n            </button>\n          </div>\n        </div>\n        <CategoriesSection\n          title=\"PRODUCTOS RELACIONAD0S\"\n          edges={getRandomCategories(edges)}\n          className=\"mt-8 lg:mt-20 mb-4 lg:mb-12\"\n        />\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover={false}\n      />\n    </Layout>\n  );\n};\n\nexport default ProductPageTemplate;\n\nexport const query = graphql`\n  query ProductQuery($handle: String!) {\n    shopifyProduct(handle: { eq: $handle }) {\n      title\n      handle\n      id\n      description\n      productType\n      shopifyId\n      tags\n      variants {\n        shopifyId\n        price\n        title\n        weight\n        weightUnit\n        image {\n          localFile {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n                originalName\n              }\n            }\n          }\n        }\n      }\n    }\n    allShopifyCollection {\n      edges {\n        node {\n          title\n          handle\n          image {\n            localFile {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                  originalName\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}